{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Button(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSelected = _useState2[0],\n    setIsSelected = _useState2[1];\n  var toggleSelection = function toggleSelection() {\n    if (!isSelected) {\n      props.item.purchase = !props.item.purchase;\n      setIsSelected(!isSelected);\n    }\n  };\n  return _jsxs(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      if (!props.disabled) {\n        props.navigation.navigate(props.screen);\n      } else {\n        toggleSelection();\n      }\n    },\n    children: [_jsx(Image, {\n      style: styles.image,\n      source: props.image\n    }), _jsxs(Text, {\n      style: styles.text,\n      children: [props.item.text, \" \"]\n    }), isSelected && _jsx(Text, {\n      children: \"OK\"\n    }), props.iteprice && _jsxs(Text, {\n      children: [props.item.price, \"\\u20AC\"]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"rgba(45, 45, 45, 0.3)\",\n    flexDirection: \"row\",\n    height: 100,\n    padding: \"3%\",\n    borderWidth: 1,\n    margin: \"1%\"\n  },\n  text: {\n    color: \"white\",\n    fontSize: 15,\n    marginLeft: 10\n  },\n  image: {\n    width: 60,\n    height: 60\n  }\n});","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Button","props","_useState","_useState2","_slicedToArray","isSelected","setIsSelected","toggleSelection","item","purchase","TouchableOpacity","style","styles","button","onPress","disabled","navigation","navigate","screen","children","Image","image","source","Text","text","iteprice","price","StyleSheet","create","flex","alignItems","backgroundColor","flexDirection","height","padding","borderWidth","margin","color","fontSize","marginLeft","width"],"sources":["/home/quangminh/ESGI/Projet_Bateau/components/Button.tsx"],"sourcesContent":["import { Text, TouchableOpacity, StyleSheet, Image } from \"react-native\";\nimport React, { useState } from \"react\";\n\nexport default function Button(props: any) {\n  const [isSelected, setIsSelected] = useState(false);\n  const toggleSelection = () => {\n    if (!isSelected) {\n      props.item.purchase = !props.item.purchase;\n      setIsSelected(!isSelected);\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      style={styles.button}\n      onPress={() => {\n        if (!props.disabled) {\n          props.navigation.navigate(props.screen);\n        } else {\n          toggleSelection();\n        }\n      }}\n    >\n      <Image style={styles.image} source={props.image}></Image>\n      <Text style={styles.text}>{props.item.text} </Text>\n      {isSelected && <Text>OK</Text>}\n      {props.iteprice && <Text>{props.item.price}â‚¬</Text>}\n    </TouchableOpacity>\n  );\n}\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"rgba(45, 45, 45, 0.3)\",\n    flexDirection: \"row\",\n    height: 100,\n    padding: \"3%\",\n    borderWidth: 1,\n    margin: \"1%\",\n  },\n  text: {\n    color: \"white\",\n    fontSize: 15,\n    marginLeft: 10,\n  },\n  image: {\n    width: 60,\n    height: 60,\n  },\n});\n"],"mappings":";;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExC,eAAe,SAASC,MAAMA,CAACC,KAAU,EAAE;EACzC,IAAAC,SAAA,GAAoCP,QAAQ,CAAC,KAAK,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAI,CAACF,UAAU,EAAE;MACfJ,KAAK,CAACO,IAAI,CAACC,QAAQ,GAAG,CAACR,KAAK,CAACO,IAAI,CAACC,QAAQ;MAC1CH,aAAa,CAAC,CAACD,UAAU,CAAC;IAC5B;EACF,CAAC;EAED,OACEN,KAAA,CAACW,gBAAgB;IACfC,KAAK,EAAEC,MAAM,CAACC,MAAO;IACrBC,OAAO,EAAE,SAAAA,QAAA,EAAM;MACb,IAAI,CAACb,KAAK,CAACc,QAAQ,EAAE;QACnBd,KAAK,CAACe,UAAU,CAACC,QAAQ,CAAChB,KAAK,CAACiB,MAAM,CAAC;MACzC,CAAC,MAAM;QACLX,eAAe,CAAC,CAAC;MACnB;IACF,CAAE;IAAAY,QAAA,GAEFtB,IAAA,CAACuB,KAAK;MAACT,KAAK,EAAEC,MAAM,CAACS,KAAM;MAACC,MAAM,EAAErB,KAAK,CAACoB;IAAM,CAAQ,CAAC,EACzDtB,KAAA,CAACwB,IAAI;MAACZ,KAAK,EAAEC,MAAM,CAACY,IAAK;MAAAL,QAAA,GAAElB,KAAK,CAACO,IAAI,CAACgB,IAAI,EAAC,GAAC;IAAA,CAAM,CAAC,EAClDnB,UAAU,IAAIR,IAAA,CAAC0B,IAAI;MAAAJ,QAAA,EAAC;IAAE,CAAM,CAAC,EAC7BlB,KAAK,CAACwB,QAAQ,IAAI1B,KAAA,CAACwB,IAAI;MAAAJ,QAAA,GAAElB,KAAK,CAACO,IAAI,CAACkB,KAAK,EAAC,QAAC;IAAA,CAAM,CAAC;EAAA,CACnC,CAAC;AAEvB;AACA,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAM,CAAC;EAC/Bf,MAAM,EAAE;IACNgB,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,uBAAuB;IACxCC,aAAa,EAAE,KAAK;IACpBC,MAAM,EAAE,GAAG;IACXC,OAAO,EAAE,IAAI;IACbC,WAAW,EAAE,CAAC;IACdC,MAAM,EAAE;EACV,CAAC;EACDZ,IAAI,EAAE;IACJa,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDlB,KAAK,EAAE;IACLmB,KAAK,EAAE,EAAE;IACTP,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}