{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport HeaderProducts from \"../components/HeaderProducts\";\nimport styles from \"../services/styles\";\nimport { purchasedProduct } from \"./Products\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Panier = function (_React$Component) {\n  _inherits(Panier, _React$Component);\n  var _super = _createSuper(Panier);\n  function Panier() {\n    _classCallCheck(this, Panier);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Panier, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsxs(ImageBackground, {\n          source: require(\"../assets/images/background.png\"),\n          style: styles.imagebackground,\n          children: [_jsx(HeaderProducts, {\n            navigation: this.props.navigation\n          }), _jsx(View, {\n            style: styles.header2,\n            children: _jsx(Text, {\n              children: \" Modifiez la quantit\\xE9 en tapant sur chaque produit\"\n            })\n          }), !purchasedProduct ? \"\" : purchasedProduct]\n        })\n      });\n    }\n  }]);\n  return Panier;\n}(React.Component);\nexport default Panier;","map":{"version":3,"names":["React","View","Text","ImageBackground","HeaderProducts","styles","purchasedProduct","jsx","_jsx","jsxs","_jsxs","Panier","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","style","container","children","source","require","imagebackground","navigation","props","header2","Component"],"sources":["/home/quangminh/ESGI/Projet_Bateau/src/Panier.tsx"],"sourcesContent":["/*import { StyleSheet, Text, View, StatusBar,TouchableOpacity,TouchableHighlight, ImageBackground, Image, Modal, Alert } from 'react-native';\nimport React from 'react';\nimport HeadStore from '../components/HeaderProducts'\n//import ProductCart from '../component/ProductCart'\nimport styles from '../services/styles'\nimport { useNavigation, ParamListBase } from '@react-navigation/native';\nimport {NativeStackNavigationProp} from \"@react-navigation/native-stack\";\n\n\n\nclass Store extends React.Component {\n\n  const navigation = useNavigation<NativeStackNavigationProp<ParamListBase>>();\n  state = {\n    modalVisible: false,\n  };\n\n  setModalVisible = (visible) => {\n    this.setState({ modalVisible: visible });\n  }\n\n\n  render(){\n    const { modalVisible } = this.state;\n    return(<View style={styles.container}>\n      <ImageBackground source={require(\"../assets/background.png\")} style={styles.Pimage}>\n      <HeadStore navigation={navigation}></HeadStore>\n\n      <View style={styles.header2}>\n                    <Text > Modifiez la quantité en tapant sur chaque produit</Text>\n      </View>\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalText}>Choisissez votre quantité :</Text>\n\n            <TouchableOpacity>\n            <Text>\n            Bistrot des Gascons\n            </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity >\n            <Text>\n            Les fous de l'île\n            </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity >\n            <Text>\n            Bistrot landais\n            </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity >\n            <Text>\n            Villa 9-trois\n            </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity>\n            <Text>\n            Bistrot du Sommelier\n            </Text>\n            </TouchableOpacity>\n\n            <TouchableHighlight\n              style={{ ...styles.openButton, backgroundColor: \"#2196F3\" }}\n              onPress={() => {\n                this.setModalVisible(!modalVisible);\n              }}\n            >\n              <Text style={styles.textStyle}>OK</Text>\n            </TouchableHighlight>\n          </View>\n        </View>\n      </Modal>\n\n        <Text style={{textAlign: \"center\"}}> Choisissez vos produits</Text>\n\n        <View style={{flex:1}}>\n          {this.props.products.map((value,index)=>{\n            return <ProductCart key={index} item={value}/>\n          })}\n        </View>\n\n        <TouchableOpacity onPress={() => {\n                          this.setModalVisible(!modalVisible);\n                        }}>\n        <Text> VALIDER </Text>\n        </TouchableOpacity>\n      </ImageBackground>\n    </View>\n    )\n}\n\n}\n\nconst mapStateToProps = state => {\n  return {\n      products: state.cart.products\n  }\n};\n\nexport default connect(mapStateToProps)(Store);\n*/\n\nimport React from 'react';\nimport { View, Text, Button, ImageBackground } from 'react-native';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport HeaderProducts from '../components/HeaderProducts';\nimport styles from '../services/styles';\nimport { purchasedProduct } from \"./Products\";\n\n\ntype RootStackParamList = {\n  Main: undefined;\n  Detail: undefined;\n  // Ajoutez d'autres écrans ici\n};\n\ntype Props = StackScreenProps<RootStackParamList, 'Main'>;\n\nclass Panier extends React.Component<Props> {\n  render() {\n    return (\n      /*<View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text>Panier Screen</Text>\n        <Button\n          title=\"Go to Details\"\n          onPress={() => this.props.navigation.navigate('Main')}\n        />\n      </View>*/\n    <View style={styles.container}>\n        <ImageBackground source={require(\"../assets/images/background.png\")} style={styles.imagebackground}>\n            <HeaderProducts navigation={this.props.navigation}></HeaderProducts>\n            <View style={styles.header2}>\n                <Text > Modifiez la quantité en tapant sur chaque produit</Text>\n            </View>\n            {!purchasedProduct ? \"\" : purchasedProduct }\n\n        </ImageBackground>\n    </View>\n    );\n  }\n}\n\nexport default Panier;"],"mappings":";;;;;;;AAmHA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,eAAA;AAG1B,OAAOC,cAAc;AACrB,OAAOC,MAAM;AACb,SAASC,gBAAgB;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,IAWxCC,MAAM,aAAAC,gBAAA;EAAAC,SAAA,CAAAF,MAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,MAAA;EAAA,SAAAA,OAAA;IAAAK,eAAA,OAAAL,MAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,MAAA;IAAAS,GAAA;IAAAC,KAAA,EACV,SAAAC,OAAA,EAAS;MACP,OAQAd,IAAA,CAACP,IAAI;QAACsB,KAAK,EAAElB,MAAM,CAACmB,SAAU;QAAAC,QAAA,EAC1Bf,KAAA,CAACP,eAAe;UAACuB,MAAM,EAAEC,OAAO,kCAAkC,CAAE;UAACJ,KAAK,EAAElB,MAAM,CAACuB,eAAgB;UAAAH,QAAA,GAC/FjB,IAAA,CAACJ,cAAc;YAACyB,UAAU,EAAE,IAAI,CAACC,KAAK,CAACD;UAAW,CAAiB,CAAC,EACpErB,IAAA,CAACP,IAAI;YAACsB,KAAK,EAAElB,MAAM,CAAC0B,OAAQ;YAAAN,QAAA,EACxBjB,IAAA,CAACN,IAAI;cAAAuB,QAAA,EAAE;YAAkD,CAAM;UAAC,CAC9D,CAAC,EACN,CAACnB,gBAAgB,GAAG,EAAE,GAAGA,gBAAgB;QAAA,CAE7B;MAAC,CAChB,CAAC;IAET;EAAC;EAAA,OAAAK,MAAA;AAAA,EArBkBX,KAAK,CAACgC,SAAS;AAwBpC,eAAerB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}